FROM nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04 AS runtime
ARG DEBIAN_FRONTEND=noninteractive

# Uncomment the lines below to use a 3rd party repository
# to get the latest (unstable from mesa/main) mesa library version
RUN apt-get update && apt install -y software-properties-common
RUN add-apt-repository ppa:oibaf/graphics-drivers -y

RUN apt update && apt install -y vainfo mesa-va-drivers mesa-utils
RUN apt-get update && \
    apt-get install -y wget git cargo ffmpeg git-lfs && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN git lfs install
RUN git config --global credential.helper store

# RUN apt install -y miniconda
ENV PATH="/root/miniconda3/bin:${PATH}"
ARG PATH="/root/miniconda3/bin:${PATH}"
# Install Miniconda on x86
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh && \
    mkdir -p /root/.conda && \
    bash miniconda.sh -b -p /root/miniconda3 && \
    rm -f miniconda.sh
RUN conda create -n kap_env python=3.11

# Make RUN commands use the new environment:
SHELL ["conda", "run", "-n", "kap_env", "/bin/bash", "-c"]

RUN pip install torch torchaudio --index-url https://download.pytorch.org/whl/cu124
RUN pip install flash_attn
RUN pip install python-dotenv python-telegram-bot gitpython
RUN pip install soundfile argparse

RUN pip install git+https://github.com/violetdenim/runorm.git

RUN apt update && apt install -y libhdf5-dev
RUN pip install maturin poetry
RUN git clone https://github.com/violetdenim/DeepFilterNet.git && cd DeepFilterNet &&  \
    poetry -C DeepFilterNet install -E train -E eval && \
    maturin develop --release -m pyDF/Cargo.toml && \
    export PYTHONPATH=$PWD/DeepFilterNet 

RUN pip install --extra-index-url https://abetlen.github.io/llama-cpp-python/whl/cu124 llama-cpp-python==0.2.90
RUN pip install llama-index==0.11.23 llama-index-embeddings-huggingface==0.3.1
RUN pip install llama-index-llms-llama-cpp==0.2.3 llama-index-llms-huggingface==0.3.5

RUN pip install coqui-tts pyannote.audio accelerate huggingface_hub
RUN DS_BUILD_TRANSFORMER_INFERENCE=1 pip install deepspeed
COPY . .
RUN python hf_login.py

# install audio packages
# RUN apt-get install ubuntu-restricted-extras
# RUN apt-get update && apt-get install -y portaudio19-dev python3-pyaudio
# RUN pip install pyaudio wave

# ENTRYPOINT ["conda", "run", "--no-capture-output", "-n", "kap_env", "python", "run.py"]
# CMD python run.py